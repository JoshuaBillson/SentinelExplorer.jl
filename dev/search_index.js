var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SentinelExplorer","category":"page"},{"location":"#SentinelExplorer","page":"Home","title":"SentinelExplorer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SentinelExplorer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SentinelExplorer]","category":"page"},{"location":"#SentinelExplorer.BoundingBox","page":"Home","title":"SentinelExplorer.BoundingBox","text":"BoundingBox(ul, lr)\n\nConstruct a bounding box defined by the corners ul and lr.\n\nAll coordinates should be provided in latitude and longitude.\n\nParameters\n\nul: The upper-left corner of the box as a Tuple{T,T} of latitude and longitude.\nlr: The lower-right corner of the box as a Tuple{T,T} of latitude and longitude.\n\nExample\n\nbb = BoundingBox((52.1, -114.4), (51.9, -114.1))\n\n\n\n\n\n","category":"type"},{"location":"#SentinelExplorer.Point","page":"Home","title":"SentinelExplorer.Point","text":"Point(lat, lon)\n\nConstruct a point located at the provided latitude and longitude.\n\nParameters\n\nlat: The latitude of the point.\nlon: The longitude of the point.\n\nExample\n\np = Point(52.0, -114.25)\n\n\n\n\n\n","category":"type"},{"location":"#SentinelExplorer.download_scene-Tuple{Any, Any}","page":"Home","title":"SentinelExplorer.download_scene","text":"download_scene(scene, access_token; dir=pwd(), unzip=false)\n\nDownload the requested Sentinel scene using the provided access token.\n\nParameters\n\nscene: The name of the Sentinel scene to download.\naccess_token: A token returned by a previous call to get_access_token.\n\nKeywords\n\ndir: The destination directory of the downloaded scene (default = pwd()).\nunzip: If true, unzips and deletes the downloaded zip file (default = false).\n\nExample\n\njulia> scene = \"S2B_MSIL2A_20200804T183919_N0500_R070_T11UPT_20230321T050221\";\n\njulia> get_scene_id(scene)\n\"29f0eaaf-0b15-412b-9597-16c16d4d79c6\"\n\n\n\n\n\n","category":"method"},{"location":"#SentinelExplorer.get_access_token-Tuple{Any, Any}","page":"Home","title":"SentinelExplorer.get_access_token","text":"get_access_token()\nget_access_token(username, password)\n\nAuthenticate with your Copernicus Data Space credentials.\n\nThe username and password may be passed explicitly, or provided as a pair of environment variables.\n\nIn the case of the latter, get_access_token() expects your username and password to be provided as the  environment variables \"SENTINELEXPLORERUSER\" and \"SENTINELEXPLORERPASS\".\n\nParameters\n\nusername: Your Copernicus Data Space username.\npassword: Your Copernicus Data Space password.\n\nReturns\n\nAn access token for downloading data.\n\nExample\n\ntoken = get_access_token(ENV[\"SENTINEL_EXPLORER_USER\"], ENV[\"SENTINEL_EXPLORER_PASS\"])\ntoken = get_access_token()  # Same as Above\n\n\n\n\n\n","category":"method"},{"location":"#SentinelExplorer.get_scene_id-Tuple{Any}","page":"Home","title":"SentinelExplorer.get_scene_id","text":"get_scene_id(scene)\n\nLookup the unique identifier for the provided scene.\n\nParameters\n\nscene: The name of the Sentinel scene to lookup.\n\nReturns\n\nThe unique identifier for downloading the provided scene.\n\nExample\n\njulia> scene = \"S2B_MSIL2A_20200804T183919_N0500_R070_T11UPT_20230321T050221\";\n\njulia> get_scene_id(scene)\n\"29f0eaaf-0b15-412b-9597-16c16d4d79c6\"\n\n\n\n\n\n","category":"method"},{"location":"#SentinelExplorer.search-Tuple{String}","page":"Home","title":"SentinelExplorer.search","text":"search(satellite; product=nothing, dates=nothing, tile=nothing, clouds=nothing, geom=nothing, max_results=100)\n\nSearch for satellite images matching the provided filters.\n\nParameters\n\nsatellite: One of \"SENTINEL-1\", \"SENTINEL-2\", or \"SENTINEL-3\".\n\nKeywords\n\nproduct: The product type to search for such as \"L2A\", \"L1C\", \"GRD\", etc.\ndates: The date range for image acquisition. Should be a tuple of DateTime objects.\ntile: Restrict results to a given tile. Only available for Sentinel-2.\nclouds: The maximum allowable cloud cover as a percentage. Not available for Sentinel-1.\ngeom: A geometry specifying the region of interest. Can be a Point, BoundingBox, or any other GeoInterface compatible geometry.\nmax_results: The maximum number of results to return (default = 100).\n\nReturns\n\nA DataFrame with the columns :Name, :AcquisitionDate, :PublicationDate, :CloudCover, and :Id.\n\nExample\n\njulia> geom = GeoDataFrames.read(\"test/data/roi.geojson\").geometry[1];\n\njulia> dates = (DateTime(2020, 8, 4), DateTime(2020, 8, 5));\n\njulia> search(\"SENTINEL-2\",  geom=geom, dates=dates)\n3×5 DataFrame\n Row │ Name                               AcquisitionDate           Pub ⋯\n     │ String                             String                    Str ⋯\n─────┼───────────────────────────────────────────────────────────────────\n   1 │ S2B_MSIL2A_20200804T183919_N0500…  2020-08-04T18:39:19.024Z  202 ⋯\n   2 │ S2B_MSIL1C_20200804T183919_N0209…  2020-08-04T18:39:19.024Z  202\n   3 │ S2B_MSIL1C_20200804T183919_N0500…  2020-08-04T18:39:19.024Z  202\n                                                        3 columns omitted\n\n\n\n\n\n","category":"method"}]
}
